/**************************************
General Formatting (Leave This Alone!)
**************************************/

* {
    box-sizing: border-box;
}

html {
    /* sets base font size for rem sizing */
    font-size: 16px;
    font-family: Calibri, Helvetica, Arial, sans-serif;
}

html,
body {
    margin: 0;
}

header,
footer {
    /* centers header and footer content horizontally and vertically */
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #86af49;
}

nav,
aside,
article {
    padding: .5rem;
}

nav,
aside {
    background-color: #b5e7a0;
    border: 1px dotted black;
}

/*****************
Grid Formatting
*****************/

/* Grid allows us to define both rows and columns, so we're still going to use a #wrapper div for the grid structure with no main container */

/* On a small screen, we'll set the height to 100vh, designate five grid template areas for the five content elements (which allows us to easily specify display order), and set five row heights as proportional components of the wrapper. */

#wrapper {
    display: grid;
    height: 100vh;
    grid-template-areas: "header""sidenav""article""sidebar""footer";
    grid-template-rows: 1fr 2fr 10fr 2fr 1fr;

}

/* Because we're going to define two different grids (one for mobile and one for desktop), we're going to name the various elements in the grid rather than using numeric values. */

header {
    grid-area: header;
}

nav {
    grid-area: sidenav;
}

article {
    grid-area: article;
}

aside {
    grid-area: sidebar;
}

footer {
    grid-area: footer
}

/* Redefining the grid from 1x5 to 3x3, by specifying three content elements for each of threw rows. Then defining the height for each of the three rows, and the width for each of the three columns */

@media screen and (min-width: 760px) {
    #wrapper {
        grid-template-areas: "header header header"
            /* 1st row: header spans three columns  */
            "sidenav article sidebar"
            /* 2nd row: one element in each of 3 columns  */
            "footer footer footer";
        /* 3rd row: footer spans three columns */
        grid-template-rows: 1fr 10fr 1fr;
        /* defines relative height of three rows */
        grid-template-columns: 20% auto 20%;
        /* defines width of the three columns */
    }
}
